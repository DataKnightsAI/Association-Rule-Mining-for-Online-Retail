# Rules with specified parameter valus
rules <- apriori(mydata,parameter = list(minlen=2, maxlen=3,supp=.7, conf=.8))
# Reading the data file
mydata<-read.csv("../data/groceries - groceries.csv",header=T)
# Finding association rules
library(arules)
rules <- apriori(mydata)
# Rules with specified parameter valus
rules <- apriori(mydata,parameter = list(minlen=2, maxlen=3,supp=.7, conf=.8))
# Finding interesting rules-1
rules <- apriori(mydata,parameter = list(minlen=2, maxlen=3,supp=.01, conf=.7),appearance=list(rhs=c("Foundation=Yes"),lhs=c("Bag=Yes", "Blush=Yes"),default="lhs"))
View(mydata)
View(rules)
redundant <- is.redundant(rules, measure="confidence")
which(redundant)
rules.pruned <- rules[!redundant]
rules.pruned <- sort(rules.pruned, by="lift")
inspect(rules.pruned)
# Reading the data file
mydata<-read.csv("../data/groceries - groceries.csv",header=T)
View(mydata)
mydata_combined <- mydata
#combine item columns
mydata_combined$items <- paste(mydata_combined$Item.1, mydata_combined$Item.2, mydata_combined$Item.3, mydata_combined$Item.4, mydata_combined$Item.5, mydata_combined$Item.6, mydata_combined$Item.7, mydata_combined$Item.8, mydata_combined$Item.9, mydata_combined$Item.10, mydata_combined$Item.11, mydata_combined$Item.12, mydata_combined$Item.13, mydata_combined$Item.14, mydata_combined$Item.15, mydata_combined$Item.16, mydata_combined$Item.17, sep=",") # comma separator
View(mydata)
mydata<-read.csv("../data/groceries - groceries.csv",header=T)
mydata_combined <- mydata
columns <- columns(mydata)
columns <- colnames(mydata)
columns <- -c(columns[1])
columns <- columns[2:33]
#combine item columns
mydata_combined$items <- paste(columns, sep=",") # comma separator
unite(mydata, basket, ..., sep = ",", remove = TRUE, na.rm = FALSE)
library(tidyr)
install.packages("tidyr")
library(tidyr)
unite(mydata, basket, ..., sep = ",", remove = TRUE, na.rm = FALSE)
library(tidyr)
library(tidyr)
install.packages("zeallot")
library(tidyr)
unite(mydata, basket, ..., sep = ",", remove = TRUE, na.rm = FALSE)
unite(mydata, basket, , sep = ",", remove = TRUE, na.rm = FALSE)
unite(mydata, basket, sep = ",", remove = TRUE, na.rm = FALSE)
View(mydata_combined)
View(mydata)
?read.transactions
# Reading the data file
mydata<-read.csv("../data/groceries - groceries.csv",header=T)
mydata <- -c(mydata$Item.s.)
mydata<-read.csv("../data/groceries - groceries.csv",header=T)
mydata <- -c(mydata$Item.s)
mydata<-read.csv("../data/groceries - groceries.csv",header=T)
mydata <- mydata[,-1]
View(mydata)
trans <- read.transactions(mydata, format="basket", sep=",")
trans <- read.transactions(mydata, format="basket")
trans <- read.transactions("../data/groceries - groceries.csv", format="basket")
mydata<-read.csv("../data/groceries - groceries.csv",header=T)
mydata <- mydata[,-1]
mydata <- write.csv(mydata, "../data/groceriesClean.csv")
trans <- read.transactions("../data/groceriesClean.csv", format="basket")
View(trans)
head(trans)
summary(trans)
head(trans, 10)
inspect(head(trans, 3))
summary(trans)
trans <- read.transactions("../data/groceriesClean.csv", format="basket", cols=1)
itemFrequencyPlot(trans)
itemFrequencyPlot(trans,topN=20,type="relative",col=brewer.pal(8,'Pastel2'),main="Relative Item Frequency Plot")
itemFrequencyPlot(trans,topN=20,type="relative",main="Relative Item Frequency Plot")
par("mar")
par(mar=c(1,1,1,1))
itemFrequencyPlot(trans,topN=20,type="relative",main="Relative Item Frequency Plot")
itemFrequencyPlot(trans,topN=5,type="relative",main="Relative Item Frequency Plot")
itemFrequencyPlot(trans,topN=10,type="relative",main="Relative Item Frequency Plot")
#read updated CSV into transactions object
trans <- read.transactions("../data/groceriesClean.csv", format="basket", sep="", cols=1)
itemFrequencyPlot(trans,topN=10,type="relative",main="Relative Item Frequency Plot")
#read updated CSV into transactions object
trans <- read.transactions("../data/groceriesClean.csv", format="basket", sep=",", cols=1)
itemFrequencyPlot(trans,topN=10,type="relative",main="Relative Item Frequency Plot")
# Reading the data file
mydata<-read.csv("../data/groceries - groceries.csv",header=T)
#remove 1st column (counting # of items in basket)
mydata <- mydata[,-1]
#write updated CSV with removed column
mydata <- write.csv(mydata, "../data/groceriesClean.csv")
#read updated CSV into transactions object
trans <- read.transactions("../data/groceriesClean.csv", format="basket", sep=",", cols=1)
itemFrequencyPlot(trans,topN=10,type="relative",main="Relative Item Frequency Plot")
itemFrequencyPlot(trans,topN=20,type="relative",main="Relative Item Frequency Plot")
.001
association.rules <- apriori(trans, parameter = list(supp=0.001, conf=0.8,maxlen=3))
inspect(association.rules)
# Reading the data file
mydata<-read.csv("../data/groceries - groceries.csv",header=T)
View(mydata)
mydata[mydata=="whole milk"]<-""
mydata[mydata=="whole milk"]<-
""
View(mydata)
mydata[mydata=="whole milk"]<-NULL
#libraries
library(arules)
# Reading the data file
mydata<-read.csv("../data/groceries - groceries.csv",header=T)
mydata[mydata=="whole milk"]<-NULL
#libraries
library(arules)
# Reading the data file
mydata<-read.csv("../data/groceries - groceries.csv",header=T)
mydata[mydata=="whole milk"]<-NULL
#libraries
library(arules)
# Reading the data file
mydata<-read.csv("../data/groceriesNOMILK",header=T)
#remove 1st column (counting # of items in basket)
mydata <- mydata[,-1]
#write updated CSV with removed column
mydata <- write.csv(mydata, "../data/groceriesClean.csv")
#read updated CSV into transactions object
trans <- read.transactions("../data/groceriesClean.csv", format="basket", sep=",", cols=1)
itemFrequencyPlot(trans,topN=20,type="relative",main="Relative Item Frequency Plot")
association.rules <- apriori(trans, parameter = list(supp=0.001, conf=0.8,maxlen=3))
inspect(trans)
inspect(association.rules)
#libraries
library(arules)
# Reading the data file
mydata<-read.csv("../data/groceriesNOMILK",header=T)
#remove 1st column (counting # of items in basket)
mydata <- mydata[,-1]
#write updated CSV with removed column
mydata <- write.csv(mydata, "../data/groceriesClean.csv")
#read updated CSV into transactions object
trans <- read.transactions("../data/groceriesClean.csv", format="basket", sep=",", cols=1)
itemFrequencyPlot(trans,topN=20,type="relative",main="Relative Item Frequency Plot")
association.rules <- apriori(trans, parameter = list(supp=0.001, conf=0.8,maxlen=3))
inspect(association.rules)
#libraries
library(arules)
# Reading the data file
mydata<-read.csv("../data/groceriesNOMILK.csv",header=T)
#remove 1st column (counting # of items in basket)
mydata <- mydata[,-1]
#write updated CSV with removed column
mydata <- write.csv(mydata, "../data/groceriesClean.csv")
#read updated CSV into transactions object
trans <- read.transactions("../data/groceriesClean.csv", format="basket", sep=",", cols=1)
itemFrequencyPlot(trans,topN=20,type="relative",main="Relative Item Frequency Plot")
association.rules <- apriori(trans, parameter = list(supp=0.001, conf=0.8,maxlen=3))
inspect(association.rules)
#libraries
library(arules)
# Reading the data file
mydata<-read.csv("../data/groceriesNOMILK.csv",header=T)
#remove 1st column (counting # of items in basket)
mydata <- mydata[,-1]
#write updated CSV with removed column
mydata <- write.csv(mydata, "../data/groceriesClean.csv")
#read updated CSV into transactions object
trans <- read.transactions("../data/groceriesClean.csv", format="basket", sep=",", cols=1)
itemFrequencyPlot(trans,topN=20,type="relative",main="Relative Item Frequency Plot")
association.rules <- apriori(trans, parameter = list(supp=0.001, conf=0.8,maxlen=3))
inspect(association.rules)
#libraries
library(arules)
# Reading the data file
mydata<-read.csv("../data/groceriesNOMILK.csv",header=T)
#remove 1st column (counting # of items in basket)
mydata <- mydata[,-1]
#write updated CSV with removed column
mydata <- write.csv(mydata, "../data/groceriesClean.csv")
#read updated CSV into transactions object
trans <- read.transactions("../data/groceriesClean.csv", format="basket", sep=",", cols=1)
itemFrequencyPlot(trans,topN=20,type="relative",main="Relative Item Frequency Plot")
association.rules <- apriori(trans, parameter = list(supp=0.001, conf=0.8,maxlen=5))
inspect(association.rules)
?apriori
#libraries
library(arules)
# Reading the data file
mydata<-read.csv("../data/groceriesNOMILK.csv",header=T)
#remove 1st column (counting # of items in basket)
mydata <- mydata[,-1]
#write updated CSV with removed column
mydata <- write.csv(mydata, "../data/groceriesClean.csv")
#read updated CSV into transactions object
trans <- read.transactions("../data/groceriesClean.csv", format="basket", sep=",", cols=1)
itemFrequencyPlot(trans,topN=20,type="relative",main="Relative Item Frequency Plot")
association.rules <- apriori(trans, parameter = list(supp=0.001, conf=0.8,maxlen=5))
inspect(association.rules)
#libraries
library(arules)
# Reading the data file
mydata<-read.csv("../data/groceriesNOMILK.csv",header=T)
#remove 1st column (counting # of items in basket)
mydata <- mydata[,-1]
#write updated CSV with removed column
mydata <- write.csv(mydata, "../data/groceriesClean.csv")
#read updated CSV into transactions object
trans <- read.transactions("../data/groceriesClean.csv", format="basket", sep=",", cols=1)
itemFrequencyPlot(trans,topN=20,type="relative",main="Relative Item Frequency Plot")
association.rules <- apriori(trans, parameter = list(supp=0.001, conf=0.7,maxlen=5))
inspect(association.rules)
#libraries
library(arules)
# Reading the data file
mydata<-read.csv("../data/groceriesNOMILK.csv",header=T)
#remove 1st column (counting # of items in basket)
mydata <- mydata[,-1]
#write updated CSV with removed column
mydata <- write.csv(mydata, "../data/groceriesClean.csv")
#read updated CSV into transactions object
trans <- read.transactions("../data/groceriesClean.csv", format="basket", sep=",", cols=1)
itemFrequencyPlot(trans,topN=20,type="relative",main="Relative Item Frequency Plot")
association.rules <- apriori(trans, parameter = list(supp=0.001, conf=0.7,maxlen=7))
inspect(association.rules)
?apriori
setwd("C:/Users/posborne/OneDrive - York University/Desktop/Certificate in Machine Learning/#R Projects/Assignment 2/ARM-Grocery-Test")
#libraries
library(arules)
# Reading the data file
mydata<-read.csv("./data/groceriesNOMILK.csv",header=T)
#remove 1st column (counting # of items in basket)
mydata <- mydata[,-1]
#write updated CSV with removed column
mydata <- write.csv(mydata, "../data/groceriesClean.csv")
#read updated CSV into transactions object
trans <- read.transactions("../data/groceriesClean.csv", format="basket", sep=",", cols=1)
itemFrequencyPlot(trans,topN=20,type="relative",main="Relative Item Frequency Plot")
association.rules <- apriori(trans, parameter = list(supp=0.001, conf=0.7,maxlen=5))
inspect(association.rules)
#libraries
library(arules)
# Reading the data file
mydata<-read.csv("./data/groceriesNOMILK.csv",header=T)
#remove 1st column (counting # of items in basket)
mydata <- mydata[,-1]
#write updated CSV with removed column
mydata <- write.csv(mydata, "./data/groceriesClean.csv")
#read updated CSV into transactions object
trans <- read.transactions("../data/groceriesClean.csv", format="basket", sep=",", cols=1)
itemFrequencyPlot(trans,topN=20,type="relative",main="Relative Item Frequency Plot")
association.rules <- apriori(trans, parameter = list(supp=0.001, conf=0.7,maxlen=5))
inspect(association.rules)
setwd("C:/Users/posborne/OneDrive - York University/Desktop/Certificate in Machine Learning/#R Projects/Assignment 2/ARM-Grocery-Test")
#libraries
library(arules)
# Reading the data file
mydata<-read.csv("./data/groceriesNOMILK.csv",header=T)
#remove 1st column (counting # of items in basket)
mydata <- mydata[,-1]
#write updated CSV with removed column
mydata <- write.csv(mydata, "./data/groceriesClean.csv")
#read updated CSV into transactions object
trans <- read.transactions("../data/groceriesClean.csv", format="basket", sep=",", cols=1)
itemFrequencyPlot(trans,topN=20,type="relative",main="Relative Item Frequency Plot")
association.rules <- apriori(trans, parameter = list(supp=0.001, conf=0.7,maxlen=5))
inspect(association.rules)
#libraries
library(arules)
# Reading the data file
mydata<-read.csv("./data/groceriesNOMILK.csv",header=T)
#remove 1st column (counting # of items in basket)
mydata <- mydata[,-1]
#write updated CSV with removed column
mydata <- write.csv(mydata, "./data/groceriesClean.csv")
#read updated CSV into transactions object
trans <- read.transactions("./data/groceriesClean.csv", format="basket", sep=",", cols=1)
itemFrequencyPlot(trans,topN=20,type="relative",main="Relative Item Frequency Plot")
association.rules <- apriori(trans, parameter = list(supp=0.001, conf=0.7,maxlen=5))
inspect(association.rules)
#libraries
library(arules)
# Reading the data file
mydata<-read.csv("./data/groceriesNOMILK.csv",header=T)
#remove 1st column (counting # of items in basket)
mydata <- mydata[,-1]
#write updated CSV with removed column
mydata <- write.csv(mydata, "./data/groceriesClean.csv")
#read updated CSV into transactions object
trans <- read.transactions("./data/groceriesClean.csv", format="basket", sep=",", cols=1)
itemFrequencyPlot(trans,topN=20,type="relative",main="Relative Item Frequency Plot")
association.rules <- apriori(trans, parameter = list(supp=0.001, conf=0.8,maxlen=3))
inspect(association.rules)
#libraries
library(arules)
# Reading the data file
mydata<-read.csv("./data/OnlineRetail.csv")
View(mydata)
View(mydata)
#libraries
library(arules)
# Reading the data file
mydata<-read.csv("./data/OnlineRetail.csv")
# read transactions from csv
trans <- read.transactions(
file = "./data/OnlineRetail.csv",
format = "single",
sep = ",",
cols=c("InvoiceNo","Description"),
rm.duplicates = T
)
?read.transactions
colvec <- c("InvoiceNo","Description")
trans <- read.transactions(
file = "./data/OnlineRetail.csv",
format = "single",
sep = ",",
cols=colvec,
rm.duplicates = T
)
# read transactions from csv
trans <- read.transactions(
file = "./data/OnlineRetail.csv",
format = "single",
header = TRUE,
sep = ",",
cols=colvec,
rm.duplicates = T
)
itemFrequencyPlot(trans,topN=20,type="relative",main="Relative Item Frequency Plot")
association.rules <- apriori(trans, parameter = list(supp=0.001, conf=0.8,maxlen=3))
inspect(association.rules)
association.rules <- apriori(trans, parameter = list(supp=0.001, conf=0.95,maxlen=3))
inspect(association.rules)
association.rules <- apriori(trans, parameter = list(supp=0.1, conf=0.95,maxlen=3))
inspect(association.rules)
association.rules <- apriori(trans, parameter = list(supp=0.1, conf=0.95,maxlen=3))
inspect(association.rules)
association.rules <- apriori(trans, parameter = list(supp=0.1, conf=0.8,maxlen=3))
inspect(association.rules)
association.rules <- apriori(trans, parameter = list(supp=0.01, conf=0.8,maxlen=3))
inspect(association.rules)
association.rules <- apriori(trans, parameter = list(supp=0.1, conf=0.8,maxlen=3))
inspect(association.rules)
association.rules <- apriori(trans, parameter = list(supp=0.01, conf=0.8,maxlen=3))
inspect(association.rules)
association.rules <- apriori(trans, parameter = list(supp=0.01, conf=0.7,maxlen=3))
inspect(association.rules)
itemFrequencyPlot(trans,topN=20,type="relative",main="Relative Item Frequency Plot")
association.rules <- apriori(trans, parameter = list(supp=0.01, conf=0.8,maxlen=5))
inspect(association.rules)
association.rules <- apriori(trans, parameter = list(supp=0.01, conf=0.8,maxlen=10)
inspect(association.rules)
association.rules <- apriori(trans, parameter = list(supp=0.01, conf=0.8,maxlen=10))
inspect(association.rules)
association.rules <- apriori(trans, parameter = list(supp=0.01, conf=0.8,maxlen=15))
inspect(association.rules)
#libraries
library(arules)
# Reading the data file
mydata<-read.csv("./data/OnlineRetail.csv")
#remove 1st column (counting # of items in basket)
#mydata <- mydata[,-1]
#write updated CSV with removed column
#mydata <- write.csv(mydata, "./data/groceriesClean.csv")
#read updated CSV into transactions object
#trans <- read.transactions("./data/groceriesClean.csv", format="single", sep=",", cols=1)
colvec <- c("InvoiceNo","Description")
# read transactions from csv
trans <- read.transactions(
file = "./data/OnlineRetail.csv",
format = "single",
header = TRUE,
sep = ",",
cols=colvec,
rm.duplicates = T
)
itemFrequencyPlot(trans,topN=20,type="relative",main="Relative Item Frequency Plot")
association.rules <- apriori(trans, parameter = list(supp=0.01, conf=0.8,maxlen=15))
inspect(association.rules)
#libraries
library(arules)
# Reading the data file
mydata<-read.csv("./data/OnlineRetail.csv")
#remove 1st column (counting # of items in basket)
#mydata <- mydata[,-1]
#write updated CSV with removed column
#mydata <- write.csv(mydata, "./data/groceriesClean.csv")
#read updated CSV into transactions object
#trans <- read.transactions("./data/groceriesClean.csv", format="single", sep=",", cols=1)
colvec <- c("InvoiceNo","Description")
# read transactions from csv
trans <- read.transactions(
file = "./data/OnlineRetail.csv",
format = "single",
header = TRUE,
sep = ",",
cols=colvec,
rm.duplicates = T
)
itemFrequencyPlot(trans,topN=20,type="relative",main="Relative Item Frequency Plot")
association.rules <- apriori(trans, parameter = list(supp=0.01, conf=0.7,maxlen=15))
inspect(association.rules)
association.rules <- apriori(trans, parameter = list(supp=0.01, conf=0.7,maxlen=100))
inspect(association.rules)
#libraries
library(arules)
# Reading the data file
mydata<-read.csv("./data/OnlineRetail.csv")
#remove 1st column (counting # of items in basket)
#mydata <- mydata[,-1]
#write updated CSV with removed column
#mydata <- write.csv(mydata, "./data/groceriesClean.csv")
#read updated CSV into transactions object
#trans <- read.transactions("./data/groceriesClean.csv", format="single", sep=",", cols=1)
colvec <- c("InvoiceNo","Description")
# read transactions from csv
trans <- read.transactions(
file = "./data/OnlineRetail.csv",
format = "single",
header = TRUE,
sep = ",",
cols=colvec,
rm.duplicates = T
)
itemFrequencyPlot(trans,topN=20,type="relative",main="Relative Item Frequency Plot")
association.rules <- apriori(trans, parameter = list(supp=0.01, conf=0.7,maxlen=100))
inspect(association.rules)
library(rCBA)
install.packages("rCBA")
# Reading the data file
mydata<-read.csv("./data/OnlineRetail.csv")
unique(mydata$Country)
dat1<-read.csv("./data/OnlineRetail.csv")
dat2<-read.csv("./data/OnlineRetail.csv")
combined <- rbind (dat1, dat2)
dat1<-read.csv("./data/OnlineRetail.csv")
dat2<-read.csv("./data/OnlineRetail.csv")
combined <- rbind (dat1, dat2)
mydata <- write.csv(combined, "./data/online_retail_II_combined.csv")
library("rCBA")
data("iris")
train <- sapply(iris,as.factor)
train <- data.frame(train, check.names=FALSE)
txns <- as(train,"transactions")
rules = rCBA::fpgrowth(txns, support=0.03, confidence=0.03, maxLength=2, consequent="Species",
parallel=FALSE)
predictions <- rCBA::classification(train,rules)
table(predictions)
sum(as.character(train$Species)==as.character(predictions),na.rm=TRUE)/length(predictions)
prunedRules <- rCBA::pruning(train, rules, method="m2cba", parallel=FALSE)
predictions <- rCBA::classification(train, prunedRules)
table(predictions)
sum(as.character(train$Species)==as.character(predictions),na.rm=TRUE)/length(predictions)
library("rCBA")
library(rCBA)
install.packages("rJava")
library(rCBA)
data("iris")
library(rCBA)
data("iris")
train <- sapply(iris,as.factor)
train <- data.frame(train, check.names=FALSE)
txns <- as(train,"transactions")
rules = rCBA::fpgrowth(txns, support=0.03, confidence=0.03, maxLength=2, consequent="Species",
parallel=FALSE)
predictions <- rCBA::classification(train,rules)
table(predictions)
sum(as.character(train$Species)==as.character(predictions),na.rm=TRUE)/length(predictions)
prunedRules <- rCBA::pruning(train, rules, method="m2cba", parallel=FALSE)
predictions <- rCBA::classification(train, prunedRules)
table(predictions)
sum(as.character(train$Species)==as.character(predictions),na.rm=TRUE)/length(predictions)
v
inspect(prunedRules)
View(train)
View(txns)
View(train)
?pgrowth
?fpgrowth
rules = rCBA::fpgrowth(txns, support=0.03, confidence=0.03, maxLength=2,parallel=FALSE)
library(rCBA)
data("iris")
train <- sapply(iris,as.factor)
train <- data.frame(train, check.names=FALSE)
txns <- as(train,"transactions")
rules = rCBA::fpgrowth(txns, support=0.03, confidence=0.03, maxLength=2,parallel=FALSE)
library(rCBA)
data("iris")
train <- sapply(iris,as.factor)
train <- data.frame(train, check.names=FALSE)
txns <- as(train,"transactions")
rules = rCBA::fpgrowth(txns, support=0.03, confidence=0.03, maxLength=2, parallel=FALSE)
library(rCBA)
data("iris")
train <- sapply(iris,as.factor)
train <- data.frame(train, check.names=FALSE)
txns <- as(train,"transactions")
rules = rCBA::fpgrowth(txns, support=0.03, confidence=0.03, maxLength=2, consequent="Species",
parallel=FALSE)
