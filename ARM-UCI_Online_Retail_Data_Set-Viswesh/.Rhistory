library(tidyr)
install.packages("zeallot")
library(tidyr)
unite(mydata, basket, ..., sep = ",", remove = TRUE, na.rm = FALSE)
unite(mydata, basket, , sep = ",", remove = TRUE, na.rm = FALSE)
unite(mydata, basket, sep = ",", remove = TRUE, na.rm = FALSE)
View(mydata_combined)
View(mydata)
?read.transactions
# Reading the data file
mydata<-read.csv("../data/groceries - groceries.csv",header=T)
mydata <- -c(mydata$Item.s.)
mydata<-read.csv("../data/groceries - groceries.csv",header=T)
mydata <- -c(mydata$Item.s)
mydata<-read.csv("../data/groceries - groceries.csv",header=T)
mydata <- mydata[,-1]
View(mydata)
trans <- read.transactions(mydata, format="basket", sep=",")
trans <- read.transactions(mydata, format="basket")
trans <- read.transactions("../data/groceries - groceries.csv", format="basket")
mydata<-read.csv("../data/groceries - groceries.csv",header=T)
mydata <- mydata[,-1]
mydata <- write.csv(mydata, "../data/groceriesClean.csv")
trans <- read.transactions("../data/groceriesClean.csv", format="basket")
View(trans)
head(trans)
summary(trans)
head(trans, 10)
inspect(head(trans, 3))
summary(trans)
trans <- read.transactions("../data/groceriesClean.csv", format="basket", cols=1)
itemFrequencyPlot(trans)
itemFrequencyPlot(trans,topN=20,type="relative",col=brewer.pal(8,'Pastel2'),main="Relative Item Frequency Plot")
itemFrequencyPlot(trans,topN=20,type="relative",main="Relative Item Frequency Plot")
par("mar")
par(mar=c(1,1,1,1))
itemFrequencyPlot(trans,topN=20,type="relative",main="Relative Item Frequency Plot")
itemFrequencyPlot(trans,topN=5,type="relative",main="Relative Item Frequency Plot")
itemFrequencyPlot(trans,topN=10,type="relative",main="Relative Item Frequency Plot")
#read updated CSV into transactions object
trans <- read.transactions("../data/groceriesClean.csv", format="basket", sep="", cols=1)
itemFrequencyPlot(trans,topN=10,type="relative",main="Relative Item Frequency Plot")
#read updated CSV into transactions object
trans <- read.transactions("../data/groceriesClean.csv", format="basket", sep=",", cols=1)
itemFrequencyPlot(trans,topN=10,type="relative",main="Relative Item Frequency Plot")
# Reading the data file
mydata<-read.csv("../data/groceries - groceries.csv",header=T)
#remove 1st column (counting # of items in basket)
mydata <- mydata[,-1]
#write updated CSV with removed column
mydata <- write.csv(mydata, "../data/groceriesClean.csv")
#read updated CSV into transactions object
trans <- read.transactions("../data/groceriesClean.csv", format="basket", sep=",", cols=1)
itemFrequencyPlot(trans,topN=10,type="relative",main="Relative Item Frequency Plot")
itemFrequencyPlot(trans,topN=20,type="relative",main="Relative Item Frequency Plot")
.001
association.rules <- apriori(trans, parameter = list(supp=0.001, conf=0.8,maxlen=3))
inspect(association.rules)
# Reading the data file
mydata<-read.csv("../data/groceries - groceries.csv",header=T)
View(mydata)
mydata[mydata=="whole milk"]<-""
mydata[mydata=="whole milk"]<-
""
View(mydata)
mydata[mydata=="whole milk"]<-NULL
#libraries
library(arules)
# Reading the data file
mydata<-read.csv("../data/groceries - groceries.csv",header=T)
mydata[mydata=="whole milk"]<-NULL
#libraries
library(arules)
# Reading the data file
mydata<-read.csv("../data/groceries - groceries.csv",header=T)
mydata[mydata=="whole milk"]<-NULL
#libraries
library(arules)
# Reading the data file
mydata<-read.csv("../data/groceriesNOMILK",header=T)
#remove 1st column (counting # of items in basket)
mydata <- mydata[,-1]
#write updated CSV with removed column
mydata <- write.csv(mydata, "../data/groceriesClean.csv")
#read updated CSV into transactions object
trans <- read.transactions("../data/groceriesClean.csv", format="basket", sep=",", cols=1)
itemFrequencyPlot(trans,topN=20,type="relative",main="Relative Item Frequency Plot")
association.rules <- apriori(trans, parameter = list(supp=0.001, conf=0.8,maxlen=3))
inspect(trans)
inspect(association.rules)
#libraries
library(arules)
# Reading the data file
mydata<-read.csv("../data/groceriesNOMILK",header=T)
#remove 1st column (counting # of items in basket)
mydata <- mydata[,-1]
#write updated CSV with removed column
mydata <- write.csv(mydata, "../data/groceriesClean.csv")
#read updated CSV into transactions object
trans <- read.transactions("../data/groceriesClean.csv", format="basket", sep=",", cols=1)
itemFrequencyPlot(trans,topN=20,type="relative",main="Relative Item Frequency Plot")
association.rules <- apriori(trans, parameter = list(supp=0.001, conf=0.8,maxlen=3))
inspect(association.rules)
#libraries
library(arules)
# Reading the data file
mydata<-read.csv("../data/groceriesNOMILK.csv",header=T)
#remove 1st column (counting # of items in basket)
mydata <- mydata[,-1]
#write updated CSV with removed column
mydata <- write.csv(mydata, "../data/groceriesClean.csv")
#read updated CSV into transactions object
trans <- read.transactions("../data/groceriesClean.csv", format="basket", sep=",", cols=1)
itemFrequencyPlot(trans,topN=20,type="relative",main="Relative Item Frequency Plot")
association.rules <- apriori(trans, parameter = list(supp=0.001, conf=0.8,maxlen=3))
inspect(association.rules)
#libraries
library(arules)
# Reading the data file
mydata<-read.csv("../data/groceriesNOMILK.csv",header=T)
#remove 1st column (counting # of items in basket)
mydata <- mydata[,-1]
#write updated CSV with removed column
mydata <- write.csv(mydata, "../data/groceriesClean.csv")
#read updated CSV into transactions object
trans <- read.transactions("../data/groceriesClean.csv", format="basket", sep=",", cols=1)
itemFrequencyPlot(trans,topN=20,type="relative",main="Relative Item Frequency Plot")
association.rules <- apriori(trans, parameter = list(supp=0.001, conf=0.8,maxlen=3))
inspect(association.rules)
#libraries
library(arules)
# Reading the data file
mydata<-read.csv("../data/groceriesNOMILK.csv",header=T)
#remove 1st column (counting # of items in basket)
mydata <- mydata[,-1]
#write updated CSV with removed column
mydata <- write.csv(mydata, "../data/groceriesClean.csv")
#read updated CSV into transactions object
trans <- read.transactions("../data/groceriesClean.csv", format="basket", sep=",", cols=1)
itemFrequencyPlot(trans,topN=20,type="relative",main="Relative Item Frequency Plot")
association.rules <- apriori(trans, parameter = list(supp=0.001, conf=0.8,maxlen=5))
inspect(association.rules)
?apriori
#libraries
library(arules)
# Reading the data file
mydata<-read.csv("../data/groceriesNOMILK.csv",header=T)
#remove 1st column (counting # of items in basket)
mydata <- mydata[,-1]
#write updated CSV with removed column
mydata <- write.csv(mydata, "../data/groceriesClean.csv")
#read updated CSV into transactions object
trans <- read.transactions("../data/groceriesClean.csv", format="basket", sep=",", cols=1)
itemFrequencyPlot(trans,topN=20,type="relative",main="Relative Item Frequency Plot")
association.rules <- apriori(trans, parameter = list(supp=0.001, conf=0.8,maxlen=5))
inspect(association.rules)
#libraries
library(arules)
# Reading the data file
mydata<-read.csv("../data/groceriesNOMILK.csv",header=T)
#remove 1st column (counting # of items in basket)
mydata <- mydata[,-1]
#write updated CSV with removed column
mydata <- write.csv(mydata, "../data/groceriesClean.csv")
#read updated CSV into transactions object
trans <- read.transactions("../data/groceriesClean.csv", format="basket", sep=",", cols=1)
itemFrequencyPlot(trans,topN=20,type="relative",main="Relative Item Frequency Plot")
association.rules <- apriori(trans, parameter = list(supp=0.001, conf=0.7,maxlen=5))
inspect(association.rules)
#libraries
library(arules)
# Reading the data file
mydata<-read.csv("../data/groceriesNOMILK.csv",header=T)
#remove 1st column (counting # of items in basket)
mydata <- mydata[,-1]
#write updated CSV with removed column
mydata <- write.csv(mydata, "../data/groceriesClean.csv")
#read updated CSV into transactions object
trans <- read.transactions("../data/groceriesClean.csv", format="basket", sep=",", cols=1)
itemFrequencyPlot(trans,topN=20,type="relative",main="Relative Item Frequency Plot")
association.rules <- apriori(trans, parameter = list(supp=0.001, conf=0.7,maxlen=7))
inspect(association.rules)
?apriori
setwd("C:/Users/posborne/OneDrive - York University/Desktop/Certificate in Machine Learning/#R Projects/Assignment 2/ARM-Grocery-Test")
#libraries
library(arules)
# Reading the data file
mydata<-read.csv("./data/groceriesNOMILK.csv",header=T)
#remove 1st column (counting # of items in basket)
mydata <- mydata[,-1]
#write updated CSV with removed column
mydata <- write.csv(mydata, "../data/groceriesClean.csv")
#read updated CSV into transactions object
trans <- read.transactions("../data/groceriesClean.csv", format="basket", sep=",", cols=1)
itemFrequencyPlot(trans,topN=20,type="relative",main="Relative Item Frequency Plot")
association.rules <- apriori(trans, parameter = list(supp=0.001, conf=0.7,maxlen=5))
inspect(association.rules)
#libraries
library(arules)
# Reading the data file
mydata<-read.csv("./data/groceriesNOMILK.csv",header=T)
#remove 1st column (counting # of items in basket)
mydata <- mydata[,-1]
#write updated CSV with removed column
mydata <- write.csv(mydata, "./data/groceriesClean.csv")
#read updated CSV into transactions object
trans <- read.transactions("../data/groceriesClean.csv", format="basket", sep=",", cols=1)
itemFrequencyPlot(trans,topN=20,type="relative",main="Relative Item Frequency Plot")
association.rules <- apriori(trans, parameter = list(supp=0.001, conf=0.7,maxlen=5))
inspect(association.rules)
setwd("C:/Users/posborne/OneDrive - York University/Desktop/Certificate in Machine Learning/#R Projects/Assignment 2/ARM-Grocery-Test")
#libraries
library(arules)
# Reading the data file
mydata<-read.csv("./data/groceriesNOMILK.csv",header=T)
#remove 1st column (counting # of items in basket)
mydata <- mydata[,-1]
#write updated CSV with removed column
mydata <- write.csv(mydata, "./data/groceriesClean.csv")
#read updated CSV into transactions object
trans <- read.transactions("../data/groceriesClean.csv", format="basket", sep=",", cols=1)
itemFrequencyPlot(trans,topN=20,type="relative",main="Relative Item Frequency Plot")
association.rules <- apriori(trans, parameter = list(supp=0.001, conf=0.7,maxlen=5))
inspect(association.rules)
#libraries
library(arules)
# Reading the data file
mydata<-read.csv("./data/groceriesNOMILK.csv",header=T)
#remove 1st column (counting # of items in basket)
mydata <- mydata[,-1]
#write updated CSV with removed column
mydata <- write.csv(mydata, "./data/groceriesClean.csv")
#read updated CSV into transactions object
trans <- read.transactions("./data/groceriesClean.csv", format="basket", sep=",", cols=1)
itemFrequencyPlot(trans,topN=20,type="relative",main="Relative Item Frequency Plot")
association.rules <- apriori(trans, parameter = list(supp=0.001, conf=0.7,maxlen=5))
inspect(association.rules)
#libraries
library(arules)
# Reading the data file
mydata<-read.csv("./data/groceriesNOMILK.csv",header=T)
#remove 1st column (counting # of items in basket)
mydata <- mydata[,-1]
#write updated CSV with removed column
mydata <- write.csv(mydata, "./data/groceriesClean.csv")
#read updated CSV into transactions object
trans <- read.transactions("./data/groceriesClean.csv", format="basket", sep=",", cols=1)
itemFrequencyPlot(trans,topN=20,type="relative",main="Relative Item Frequency Plot")
association.rules <- apriori(trans, parameter = list(supp=0.001, conf=0.8,maxlen=3))
inspect(association.rules)
#libraries
library(arules)
# Reading the data file
mydata<-read.csv("./data/OnlineRetail.csv")
View(mydata)
colvec <- c("InvoiceNo","Description")
View(mydata)
# read transactions from csv
trans <- read.transactions(
file = "./data/OnlineRetail.csv",
format = "single",
header = TRUE,
sep = ",",
cols=colvec,
rm.duplicates = T
)
itemFrequencyPlot(trans,topN=20,type="relative",main="Relative Item Frequency Plot")
association.rules <- apriori(trans, parameter = list(supp=0.01, conf=0.7,maxlen=100))
inspect(association.rules)
association.rules <- apriori(trans, parameter = list(supp=0.01, conf=0.7,maxlen=5))
association.rules <- apriori(trans, parameter = list(supp=0.01, conf=0.7,maxlen=10))
association.rules <- apriori(trans, parameter = list(supp=0.01, conf=0.7,maxlen=5))
inspect(association.rules)
association.rules <- apriori(trans, parameter = list(supp=0.01, conf=0.7,maxlen=3))
inspect(association.rules)
association.rules <- apriori(trans, parameter = list(supp=0.01, conf=0.7,maxlen=2))
inspect(association.rules)
association.rules <- apriori(trans, parameter = list(supp=0.01, conf=0.7,maxlen=3))
inspect(association.rules)
association.rules <- apriori(trans, parameter = list(supp=0.01, conf=0.8,maxlen=5))
inspect(association.rules)
install.packages("arulesViz")
library(arulesViz)
plot(association.rules, method = "paracoord")
inspect(association.rules)
#apriori algorithm
association.rules <- apriori(trans, parameter = list(supp=0.01, conf=0.7,maxlen=5))
inspect(association.rules)
#apriori algorithm
association.rules <- apriori(trans, parameter = list(supp=0.01, conf=0.7,minlen = 3, maxlen=5))
inspect(association.rules)
plot(association.rules, method = "graph")
View(trans)
View(mydata)
#FP growth
fp.rules <- fpgrowth(trans, support = 0.01, confidence = 0.7, minlen = 3, maxlen = 5)
install.packages("rCBA")
library(rCBA)
install.packages("rJava")
library(rCBA)
library(rJava)
library(rCBA)
version
library(rJava)
library(rJava)
library(rJava)
Sys.setenv(JAVA_HOME = 'C:\Program Files (x86)\Java\jre1.8.0_241')
Sys.setenv(JAVA_HOME = 'C:/Program Files (x86)/Java/jre1.8.0_241')
library(rJava)
Sys.setenv(JAVA_HOME = 'C:\\Program Files (x86)\\Java\\jre1.8.0_241')
library(rJava)
Sys.setenv(JAVA_HOME = 'C:\\Program Files (x86)\\Java\\jre1.8.0_241\\lib')
library(rJava)
Sys.setenv(JAVA_HOME = 'C:\\Program Files (x86)\\Java\\jre1.8.0_241')
Sys.setenv(JAVA_HOME = 'C:\\Program Files (x86)\\Java')
library(rJava)
install.packages("rJava")
library(rJava)
install.packages("rJava")
library(rJava)
#libraries
library(arules)
library(rJava)
library(rCBA)
library(arulesViz)
# Reading the data file
mydata<-read.csv("./data/Online Retail.csv")
setwd("C:/Users/viswe/Desktop/Certificate in Machine Learning/ASSIGNMENTS/CSML1000-Group_10-Assignment_2/ARM-UCI_Online_Retail_Data_Set-Viswesh")
# Reading the data file
mydata<-read.csv("./data/Online Retail.csv")
setwd("C:/Users/viswe/Desktop/Certificate in Machine Learning/ASSIGNMENTS/CSML1000-Group_10-Assignment_2/ARM-UCI_Online_Retail_Data_Set-Viswesh")
# Reading the data file
mydata<-read.csv("./data/Online Retail.csv")
# Reading the data file
mydata<-read.csv("./data/OnlineRetail.csv")
colvec <- c("InvoiceNo","Description")
# read transactions from csv
trans <- read.transactions(
file = "./data/OnlineRetail.csv",
format = "single",
header = TRUE,
sep = ",",
cols=colvec,
rm.duplicates = T
)
itemFrequencyPlot(trans,topN=20,type="relative",main="Relative Item Frequency Plot")
#apriori algorithm
apriori.rules <- apriori(trans, parameter = list(supp=0.01, conf=0.7,minlen = 3, maxlen=5))
inspect(apriori.rules)
#FP growth
fp.rules <- fpgrowth(trans, support = 0.01, confidence = 0.7, minlen = 3, maxlen = 5)
inspect(fp.rules)
#FP growth
fp.rules <- rCBA::fpgrowth(trans, support = 0.01, confidence = 0.7, minlen = 3, maxlen = 5)
#ECLAT algorithm
eclat.rules <- eclat(trans, parameter = list(support=0.01, maxlen=5))
inspect(eclat.rules)
#ECLAT algorithm
eclat.rules <- eclat(trans, parameter = list(support=0.01,conf=0.7 maxlen=5))
#ECLAT algorithm
eclat.rules <- eclat(trans, parameter = list(support=0.01,conidence=0.7 maxlen=5))
#ECLAT algorithm
eclat.rules <- eclat(trans, parameter = list(support=0.01,confidence=0.7 maxlen=5))
#ECLAT algorithm
eclat.rules <- eclat(trans, parameter = list(support=0.01,confidence=0.7,maxlen=5))
#ECLAT algorithm
eclat.rules <- eclat(trans, parameter = list(supp=0.01,maxlen=5))
inspect(eclat.rules)
#ECLAT algorithm
eclat.itemset <- eclat(trans, parameter = list(supp=0.01,maxlen=5))
eclat.rules <- ruleInduction(eclat.itemset, trans, confidence = 0.7)
inspect(eclat.rules)
#plot rules
plot(apriori.rules, method = "graph")
plot(eclat.rules, method = "graph")
eclat.rules <- ruleInduction(eclat.itemset, trans, confidence = 0.8)
inspect(eclat.rules)
eclat.rules <- ruleInduction(eclat.itemset, trans, confidence = 0.75)
inspect(eclat.rules)
plot(eclat.rules, method = "graph")
---
title: "Association Rule Mining for a UK Online Retail Company"
author:
-name: Alex Fung
-name: Patrick Osborne
-name: Tony Lee
-name: Viswesh Krishnamurthy
date: "Feb 26, 2020"
output: html_document
```{r, echo=FALSE, message = FALSE, warning = FALSE, error = FALSE}
knitr::opts_chunk$set(echo = TRUE)
#loading libraries
library(arules)
library(rJava)
library(rCBA)
library(arulesViz)
# Reading the data file
mydata<-read.csv("./data/OnlineRetail.csv")
```
## Abstract
The retail industry is one that has changed far beyond recognition with the advent of internet. From once having to make a list, physically travel to a store, buy & haul your purchase yourself, to now simply ordering your needs online and getting it delivered in less than 24 hours, retail buying has become far more convenient. This buying convenience has also introduced challeges on the part of the sellers. The once obvious buying patterns are no longer obvious and requires complex analyses to understand customer preferences. In this project, we attempt to help a UK based Online Retail store understand their customers' buying patterns
## Background
---
title: "Association Rule Mining for a UK Online Retail Company"
author:
-name: Alex Fung
-name: Patrick Osborne
-name: Tony Lee
-name: Viswesh Krishnamurthy
date: "Feb 26, 2020"
output: html_document
```{r, echo=FALSE, message = FALSE, warning = FALSE, error = FALSE}
knitr::opts_chunk$set(echo = TRUE)
#loading libraries
library(arules)
library(rJava)
library(rCBA)
library(arulesViz)
# Reading the data file
mydata<-read.csv("./data/OnlineRetail.csv")
```
## Abstract
The retail industry is one that has changed far beyond recognition with the advent of internet. From once having to make a list, physically travel to a store, buy & haul your purchase yourself, to now simply ordering your needs online and getting it delivered in less than 24 hours, retail buying has become far more convenient. This buying convenience has also introduced challeges on the part of the sellers. The once obvious buying patterns are no longer obvious and requires complex analyses to understand customer preferences. In this project, we attempt to help a UK based Online Retail store understand their customers' buying patterns
install.packages("rticles")
library(rticles)
head(mydata)
#plot rules
plot(apriori.rules, method = "graph")
#libraries
library(arules)
library(rJava)
library(rCBA)
library(arulesViz)
# Reading the data file
mydata<-read.csv("./data/OnlineRetail.csv")
mydata <- mydata[-grep("C", mydata$InvoiceNo),]
mydata <- mydata[-grep("A", mydata$InvoiceNo),]
mydata <- mydata[!(mydata$Description == ""),]
#remove 1st column (counting # of items in basket)
#mydata <- mydata[,-1]
#write updated CSV with cleaned InvoiceNo column
mydata <- write.csv(mydata, "./data/OnlineRetail1.csv")
#read updated CSV into transactions object
#trans <- read.transactions("./data/groceriesClean.csv", format="single", sep=",", cols=1)
colvec <- c("InvoiceNo","Description")
# read transactions from csv
trans <- read.transactions(
file = "./data/OnlineRetail1.csv",
format = "single",
header = TRUE,
sep = ",",
cols=colvec,
rm.duplicates = T
)
itemFrequencyPlot(trans,topN=20,type="relative",main="Relative Item Frequency Plot")
#apriori algorithm
apriori.rules <- apriori(trans, parameter = list(supp=0.01, conf=0.8,minlen = 3, maxlen=5))
inspect(apriori.rules)
#FP growth
#fp.rules <- rCBA::fpgrowth(trans, support = 0.01, confidence = 0.7, minlen = 3, maxlen = 5)
#inspect(fp.rules)
#ECLAT algorithm
eclat.itemset <- eclat(trans, parameter = list(supp=0.02,maxlen=5))
eclat.rules <- ruleInduction(eclat.itemset, trans, confidence = 0.)
inspect(eclat.rules)
#plot rules
plot(apriori.rules, method = "graph")
plot(eclat.rules, method = "graph")
plot(apriori.rules, method = NULL, measure = "support", shading = "lift")
plot(eclat.rules, method = NULL, measure = "support", shading = "lift")
eclat.itemset <- eclat(trans, parameter = list(supp=0.02,maxlen=5))
eclat.rules <- ruleInduction(eclat.itemset, trans, confidence = 0.8)
inspect(eclat.rules)
setwd("C:/Users/viswe/Desktop/Certificate in Machine Learning/ASSIGNMENTS/CSML1000-Group_10-Assignment_2/ARM-UCI_Online_Retail_Data_Set-Viswesh")
#ECLAT algorithm
eclat.itemset <- eclat(trans, parameter = list(supp=0.02,maxlen=5))
eclat.rules <- ruleInduction(eclat.itemset, trans, confidence = 0.8)
inspect(eclat.rules)
getwd()
getwd()
setwd("C:/Git/CSML1000-Group_10-Assignment_2/ARM-UCI_Online_Retail_Data_Set-Viswesh")
```
## Reading the data file
mydata<-read.csv("./data/OnlineRetail.csv")
```
```
## Reading the data file
mydata<-read.csv("../data/OnlineRetail.csv")
```
```
## Reading the data file
mydata<-read.csv("/data/OnlineRetail.csv")
```
```
## Reading the data file
mydata<-read.csv("data/OnlineRetail.csv")
```
```
## Reading the data file
mydata<-read.csv('./data/OnlineRetail.csv')
```
```
mydata<-read.csv('./data/OnlineRetail.csv')
```
```
mydata<-read.csv('../data/OnlineRetail.csv')
```
```
test <- read.csv('./data/OnlineRetail.csv')
```
test <- read.csv('./data/OnlineRetail.csv')
install.packages("xtable")
